version: '3.8'

services:

  web_notepad_backend:
    container_name: web_notepad_backend
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    restart: unless-stopped
    ports:
      - 5000:5000
    env_file: .docker.env
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 5000 --reload
    # command: sleep infinity
    volumes:
      - ./src/backend/app:/opt/app

  web_notepad_frontend:
    container_name: web_notepad_frontend
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    restart: unless-stopped
    env_file: .docker.env
    ports:
      - 8080:8080
    # command: sleep infinity
    volumes:
      - ./src/frontend:/data/app
      - node_modules:/app/node_modules

  web_notepad_migration:
    container_name: web_notepad_migration
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file: .docker.env
    volumes:
      - ./src/backend/migrations:/opt/migrations
    command: poetry run alembic upgrade head
    # command: sleep infinity
    depends_on:
      web_notepad_database:
        condition: service_healthy

  web_notepad_database:
    container_name: web_notepad_database
    image: postgres:13
    restart: unless-stopped
    env_file: .docker.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  node_modules:
